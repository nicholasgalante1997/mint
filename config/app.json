{
    "app": {
        "name": "@couch-gag/mint",
        "version": "1.0.0"
    },
    "entrypoints": [
        {
            "key": "@mint-home-page",
            "path": "mounts/home/index.tsx",
            "page": {
                "registryKey": "@mint-home-page",
                "metadata": {
                    "raw": [
                        "<title>@mint.</title>",
                        "<meta name=\"description\" content=\"A minimal technology blog.\" />"
                    ]
                }
            },
            "out": {
                "bundle": "home",
                "html": "index"
            }
        },
        {
            "key": "@mint-browse-page",
            "path": "mounts/browse-articles/index.tsx",
            "page": {
                "registryKey": "@mint-browse-page",
                "metadata": {
                    "raw": []
                }
            },
            "out": {
                "bundle": "browse",
                "html": "browse-articles"
            }
        },
        {
            "key": "@mint-article-bundle",
            "path": "mounts/articles/index.tsx",
            "page": {
                "registryKey": "@mint-main-article-page"
            },
            "out": {
                "bundle": "article"
            }
        }
    ],
    "data": {
        "articles": [
            {
                "key": "@mint/WEBWORKERS_PREFETCH_1",
                "contentPath": "data/WEBWORKERS_PREFETCH_1.md",
                "display": {
                    "image": "/doodles/doodles_space_banana.jpeg",
                    "imageAltText": "A doodles nft character emerging from a banana peel in a light blue themed outer space.",
                    "title": "Using Webworkers To Prefetch Resources Client Side",
                    "subtitle": "Prefetching your application's resources enhances your end user's experience with your application because it reduces the idle time your user is spending on your site. Here's how it works.",
                    "tags": [
                        {
                            "visible": "React",
                            "keys": ["react", "react-dom"]
                        }, 
                        {
                            "visible": "Optimization",
                            "keys": ["optimization"]
                        },
                        {
                            "visible": "Web Workers",
                            "keys": ["web-workers", "webworkers", "web workers"]
                        }
                    ]
                }
            },
            {
                "key": "@mint/WEBAPP_PERFORMANCE_1",
                "contentPath": "data/WEBAPP_PERFORMANCE_1.md",
                "display": {
                    "image": "/doodles/doodles_pink.png",
                    "imageAltText": "A doodles character in a blue shirt against a pink background.",
                    "title": "Getting Observability Into Webapp Performance",
                    "subtitle": "Take longer to load your webpage. I'll wait.",
                    "tags": [
                        {
                            "visible": "React",
                            "keys": ["react", "react-dom"]
                        }, 
                        {
                            "visible": "Optimization",
                            "keys": ["optimization"]
                        },
                        {
                            "visible": "Web Vitals",
                            "keys": ["web-vitals", "webvitals", "web vitals"]
                        },
                        {
                            "visible": "Lighthouse",
                            "keys": ["lighthouse", "browser-tools"]
                        }
                    ]
                }
            },
            {
                "key": "@mint/HTML5_IMAGE_LAZY_LOADING",
                "contentPath": "data/HTML5_IMAGE_LAZY_LOADING.md",
                "display": {
                    "image": "/doodles/doodles_cloud.webp",
                    "imageAltText": "A doodle nft character floating on a cloud.",
                    "title": "using Native HTML5 to Lazy Load Images",
                    "subtitle": "Didnt even really need to be an article this one. Too quick.",
                    "tags": [
                        {
                            "visible": "Html",
                            "keys": ["html"]
                        }, 
                        {
                            "visible": "Optimization",
                            "keys": ["optimization"]
                        },
                        {
                            "visible": "Javascript",
                            "keys": ["javascript"]
                        }
                    ]
                }
            },
            {
                "key": "@mint/PATTERNS_TRY_1",
                "contentPath": "data/PATTERNS_TRY_1.md",
                "display": {
                    "image": "/doodles/doodles_pink.png",
                    "imageAltText": "A doodles character in a blue shirt against a pink background.",
                    "title": "Offering an alternatve method for executing code that could fail. Based on the Rust 'Option' concept.",
                    "subtitle": "There are a number of code smells with the javascript usage of try-catch. Here's a simple alternative that could help standardize your handling of fallable code.",
                    "tags": [
                        {
                            "visible": "Javascript",
                            "keys": ["javascript"]
                        }
                    ]
                }
            },
            {
                "key": "@mint/ANECDOTE_GOTHAM_1",
                "contentPath": "data/ANECDOTE_GOTHAM_1.md",
                "display": {
                    "image": "/doodles/doodles_space_banana.jpeg",
                    "imageAltText": "A doodles nft character emerging from a banana peel in a light blue themed outer space.",
                    "title": "ANECDOTE: Amazon Games Gotham",
                    "subtitle": "Done went and made a design system.",
                    "tags": [
                        {
                            "visible": "React",
                            "keys": ["react", "react-dom"]
                        }, 
                        {
                            "visible": "styled-components",
                            "keys": ["styled-components"]
                        }
                    ]
                }
            },
            {
                "key": "@mint/ANECDOTE_COUCHGAG_1",
                "contentPath": "data/ANECDOTE_COUCHGAG_1.md",
                "display": {
                    "image": "/doodles/doodles_skeleton.webp",
                    "imageAltText": "The react.js logo in a light blue hue.",
                    "title": "ANECDOTE: Couch Gag 1",
                    "subtitle": "This is my everest.",
                    "tags": [
                        {
                            "visible": "React",
                            "keys": ["react", "react-dom"]
                        }
                    ]
                }
            },
            {
                "key": "@mint/ESM_BROADCAST_CHANNEL_1",
                "contentPath": "data/ESM_BROADCAST_CHANNEL_1.md",
                "display": {
                    "image": "/doodles/doodles_cloud.webp",
                    "imageAltText": "A doodle nft character floating on a cloud.",
                    "title": "Build A Cross Window Lighting Synchronizer with the Broadcast Channel, ESM, and Import Maps",
                    "subtitle": "Broh went wild in this one.",
                    "tags": [
                        {
                            "visible": "Broadcast Channel",
                            "keys": ["broadacast-channel", "event", "messaging", "window communication"]
                        },
                        {
                            "visible": "ESM",
                            "keys": ["ecmascript modules", "es6", "esm", "javascript"]
                        },
                        {
                            "visible": "Import Maps",
                            "keys": ["import maps", "html5", "javascript", "frameworkless"]
                        }
                    ]
                }
            }
        ]
    }
}